import { Abi } from "abitype";
import { Address, WalletClient, getContract } from "viem";
import { useDeployedContractInfo } from "~~/hooks/scaffold-eth";
import { ContractName } from "~~/utils/scaffold-eth/contract";

/**
 * Gets a deployed contract by contract name and returns a contract instance
 * @param config - The config settings
 * @param config.contractName - Deployed contract name
 * @param config.walletClient - An viem wallet client instance (optional)
 */
export const useScaffoldContract = <TContractName extends ContractName>({
  contractName,
  walletClient,
}: {
  contractName: TContractName;
  walletClient?: GetWalletClient;
}) => {
  const { data: deployedContractData, isLoading: deployedContractLoading } = useDeployedContractInfo(contractName);

  const contract = getContract({
    address: deployedContractData?.address as Address,
    abi: deployedContractData?.abi as Abi,
    walletClient,
  });

  return {
    data: contract,
    isLoading: deployedContractLoading,
  };
};
